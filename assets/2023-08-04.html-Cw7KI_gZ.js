import{_ as l}from"./hero-CbGtQ2Lh.js";import{_ as t,r,o as p,c,b as s,d as n,e as o,a}from"./app-P3E1jSxo.js";const i={},y=a('<p><img src="'+l+'" alt="Logo"></p><h1 id="this-week-in-mojo-2023-08-04" tabindex="-1"><a class="header-anchor" href="#this-week-in-mojo-2023-08-04"><span>This Week in Mojo 2023-08-04</span></a></h1><h2 id="mojo-playground-update" tabindex="-1"><a class="header-anchor" href="#mojo-playground-update"><span>Mojo Playground Update</span></a></h2>',3),h={href:"https://docs.modular.com/mojo/changelog.html#august-2023",target:"_blank",rel:"noopener noreferrer"},d=s("h3",{id:"‚≠ê-new",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#‚≠ê-new"},[s("span",null,"‚≠ê New")])],-1),D={href:"https://docs.modular.com/mojo/MojoStdlib/Tensor.html",target:"_blank",rel:"noopener noreferrer"},F=a(`<div class="language-mojo" data-ext="mojo" data-title="mojo"><pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6;" tabindex="0"><code><span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> DType </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> DType</span></span>
<span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Tensor </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> Tensor</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;"> TensorShape</span></span>
<span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Index </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> Index</span></span>
<span class="line"><span style="color:#7DCFFF;">from</span><span style="color:#A9B1D6;"> Random </span><span style="color:#7DCFFF;">import</span><span style="color:#A9B1D6;"> rand</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> height</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> 256</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> width</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> 256</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> channels</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;"># Create the tensor of dimensions height, width, channels and fill with</span></span>
<span class="line"><span style="color:#51597D;font-style:italic;"># random value.</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">let</span><span style="color:#C0CAF5;"> image</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> rand</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">float32</span><span style="color:#9ABDF5;">](</span><span style="color:#7AA2F7;">TensorShape</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">height</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> width</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> channels</span><span style="color:#9ABDF5;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;"># Declare the grayscale image.</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">var</span><span style="color:#C0CAF5;"> gray_scale_image</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> Tensor</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">DType</span><span style="color:#89DDFF;">.</span><span style="color:#A9B1D6;">float32</span><span style="color:#9ABDF5;">](</span><span style="color:#7AA2F7;">TensorShape</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">height</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;"> width</span><span style="color:#9ABDF5;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#51597D;font-style:italic;"># Perform the RGB to grayscale transform.</span></span>
<span class="line"><span style="color:#BB9AF7;">for</span><span style="color:#A9B1D6;"> y </span><span style="color:#BB9AF7;">in</span><span style="color:#0DB9D7;"> range</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">height</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BB9AF7;">    for</span><span style="color:#A9B1D6;"> x </span><span style="color:#BB9AF7;">in</span><span style="color:#0DB9D7;"> range</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">width</span><span style="color:#9ABDF5;">)</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">        let</span><span style="color:#C0CAF5;"> r</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> image</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">y</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;">x</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;">0</span><span style="color:#9ABDF5;">]</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">        let</span><span style="color:#C0CAF5;"> g</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> image</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">y</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;">x</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;">1</span><span style="color:#9ABDF5;">]</span></span>
<span class="line"><span style="color:#9D7CD8;font-style:italic;">        let</span><span style="color:#C0CAF5;"> b</span><span style="color:#89DDFF;"> =</span><span style="color:#A9B1D6;"> image</span><span style="color:#9ABDF5;">[</span><span style="color:#A9B1D6;">y</span><span style="color:#89DDFF;">,</span><span style="color:#A9B1D6;">x</span><span style="color:#89DDFF;">,</span><span style="color:#FF9E64;">2</span><span style="color:#9ABDF5;">]</span></span>
<span class="line"><span style="color:#A9B1D6;">        gray_scale_image</span><span style="color:#9ABDF5;">[</span><span style="color:#7AA2F7;">Index</span><span style="color:#9ABDF5;">(</span><span style="color:#C0CAF5;">y</span><span style="color:#89DDFF;">,</span><span style="color:#C0CAF5;">x</span><span style="color:#9ABDF5;">)]</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9E64;"> 0.299</span><span style="color:#89DDFF;"> *</span><span style="color:#A9B1D6;"> r </span><span style="color:#89DDFF;">+</span><span style="color:#FF9E64;"> 0.587</span><span style="color:#89DDFF;"> *</span><span style="color:#A9B1D6;"> g </span><span style="color:#89DDFF;">+</span><span style="color:#FF9E64;"> 0.114</span><span style="color:#89DDFF;"> *</span><span style="color:#A9B1D6;"> b</span></span>
<span class="line"></span></code></pre></div><h3 id="üõ†Ô∏è-fixed" tabindex="-1"><a class="header-anchor" href="#üõ†Ô∏è-fixed"><span>üõ†Ô∏è Fixed</span></a></h3>`,2),m={href:"https://github.com/modularml/mojo/issues/53",target:"_blank",rel:"noopener noreferrer"},u=s("h2",{id:"team-answers",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#team-answers"},[s("span",null,"Team Answers")])],-1),g=s("h3",{id:"modular-and-mojo-docs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#modular-and-mojo-docs"},[s("span",null,"Modular and Mojo Docs")])],-1),f=s("p",null,"we use Quarto (for now) but this will change to our own custom solution for a number of reasons",-1),A={href:"https://discord.com/channels/1087530497313357884/1104620458168553563/1136344454802964512",target:"_blank",rel:"noopener noreferrer"},B=s("h3",{id:"python-pep-703-optional-global-interpreter-lock",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#python-pep-703-optional-global-interpreter-lock"},[s("span",null,"Python PEP 703 - Optional Global Interpreter Lock")])],-1),_={href:"https://discuss.python.org/t/a-steering-council-notice-about-pep-703-making-the-global-interpreter-lock-optional-in-cpython/30474",target:"_blank",rel:"noopener noreferrer"},C=s("code",null,"PyList_GetItem",-1),b=s("code",null,"_Py_ThreadId",-1),w={href:"https://github.com/colesbury/nogil/blob/f7e45d6bfbbd48c8d5cf851c116b73b85add9fc6/Include/object.h#L428-L455",target:"_blank",rel:"noopener noreferrer"},k=s("p",null,"That said, there are a ton of crazy smart people working on this and everyone seems highly motivated. Overall, it's a great step forward for the ecosystem in any case in my opinion.",-1),j={href:"https://discord.com/channels/1087530497313357884/1135312969664843846/1135332933805285457",target:"_blank",rel:"noopener noreferrer"};function v(T,x){const e=r("ExternalLinkIcon");return p(),c("div",null,[y,s("ul",null,[s("li",null,[s("a",h,[n("Full Changelog here"),o(e)])])]),d,s("p",null,[n("A new "),s("a",D,[n("Tensor"),o(e)]),n(" type has been introduced. This tensor type manages its own data (unlike NDBuffer and Buffer which are just views). Therefore, the tensor type performs its own allocation and free. Here is a simple example of using the tensor type to represent an RGB image and convert it to grayscale:")]),F,s("ul",null,[s("li",null,[s("a",m,[n("Issue #53"),o(e)]),n(": Int now implements true division with the / operator. Similar to Python, this returns a 64-bit floating point number. The corresponding in-place operator, /=, has the same semantics as //=.")])]),u,g,f,s("ul",null,[s("li",null,[s("a",A,[n("2023-08-03 Discord Tim Davis"),o(e)])])]),B,s("p",null,[n("It should be strictly compatible with Mojo's use of CPython and I think it is a good move for the Python ecosystem in general. I'm seeing a lot of folks that seem to be declaring success early, my read of PEP703 is that there is still a lot of work to do to figure things out and land things. The "),s("a",_,[n("Python core team summary"),o(e)]),n(" is really great and I highly recommend reading it. It seems like the transition will take a few years. I'm personally very curious how heavy users of CPython internals (e.g. TensorFlow and PyTorch) will handle the transition - the changes are pretty profound, breaking core C APIs like "),C,n(".")]),s("p",null,[n("Also my read of the code in the implementation seems that they may need to iterate a bit. One of the core operations in the critical path for performance is "),b,n(" and my read of it is that it will break code that uses thread local storage for other things by directly scribbling into it in a "),s("a",w,[n("very low-level way"),o(e)])]),k,s("ul",null,[s("li",null,[s("a",j,[n("2023-07-31 Discord Chris Lattner"),o(e)])])])])}const E=t(i,[["render",v],["__file","2023-08-04.html.vue"]]),M=JSON.parse('{"path":"/this-week-in-mojo/2023-08-04.html","title":"This Week in Mojo 2023-08-04","lang":"en-US","frontmatter":{"date":"2023-08-04T00:00:00.000Z","author":"Mojo Dojo","author_site":"https://mojodojo.dev","author_image":"https://mojodojo.dev/hero.png","feed":true,"head":[["meta",{"name":"twitter:card","content":"summary"}],["meta",{"name":"twitter:site","content":"@mojodojodev"}],["meta",{"name":"twitter:title","content":"This Week in Mojo"}],["meta",{"name":"twitter:description","content":"This week in Mojo with language updates, community content, and everything else related to Mojo"}],["meta",{"name":"twitter:image","content":"https://mojodojo.dev/hero.png"}]]},"headers":[{"level":2,"title":"Mojo Playground Update","slug":"mojo-playground-update","link":"#mojo-playground-update","children":[{"level":3,"title":"‚≠ê New","slug":"‚≠ê-new","link":"#‚≠ê-new","children":[]},{"level":3,"title":"üõ†Ô∏è Fixed","slug":"üõ†Ô∏è-fixed","link":"#üõ†Ô∏è-fixed","children":[]}]},{"level":2,"title":"Team Answers","slug":"team-answers","link":"#team-answers","children":[{"level":3,"title":"Modular and Mojo Docs","slug":"modular-and-mojo-docs","link":"#modular-and-mojo-docs","children":[]},{"level":3,"title":"Python PEP 703 - Optional Global Interpreter Lock","slug":"python-pep-703-optional-global-interpreter-lock","link":"#python-pep-703-optional-global-interpreter-lock","children":[]}]}],"filePathRelative":"this-week-in-mojo/2023-08-04.md","git":{"createdTime":1692819390000,"updatedTime":1692819390000}}');export{E as comp,M as data};
